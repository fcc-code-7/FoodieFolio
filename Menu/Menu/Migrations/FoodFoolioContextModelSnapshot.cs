// <auto-generated />
using Menu.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Menu.Migrations
{
    [DbContext(typeof(FoodFoolioContext))]
    partial class FoodFoolioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Menu.Models.Dishes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Dishes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Pizza Margherita or Margherita pizza is a typical Neapolitan pizza, roundish in shape with a raised edge and garnished with hand-crushed peeled tomatoes, mozzarella, fresh basil leaves, and extra virgin olive oil. The dough is made by mixing water, salt and yeast with flour.",
                            IconUrl = "https://www.google.com/imgres?q=margherita%20pizza&imgurl=https%3A%2F%2Fau.ooni.com%2Fcdn%2Fshop%2Farticles%2F20220211142645-margherita-9920.jpg%3Fcrop%3Dcenter%26height%3D800%26v%3D1662539926%26width%3D800&imgrefurl=https%3A%2F%2Fau.ooni.com%2Fblogs%2Frecipes%2Fmargherita-pizza&docid=QnwZSuVaEWOuDM&tbnid=QpzZoTwQ6JhOtM&vet=12ahUKEwi1v5GK2fWFAxW88bsIHeiKAKEQM3oECGUQAA..i&w=800&h=800&hcb=2&ved=2ahUKEwi1v5GK2fWFAxW88bsIHeiKAKEQM3oECGUQAA",
                            Title = "Margherita",
                            price = 7.5
                        });
                });

            modelBuilder.Entity("Menu.Models.Dishngredients", b =>
                {
                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.HasKey("DishId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("Dishngredients");

                    b.HasData(
                        new
                        {
                            DishId = 1,
                            IngredientId = 1
                        },
                        new
                        {
                            DishId = 1,
                            IngredientId = 2
                        });
                });

            modelBuilder.Entity("Menu.Models.Ingredients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "fresh mozzarella"
                        },
                        new
                        {
                            Id = 2,
                            Name = "olive oil"
                        });
                });

            modelBuilder.Entity("Menu.Models.Dishngredients", b =>
                {
                    b.HasOne("Menu.Models.Dishes", "dishes")
                        .WithMany("dishngredients")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Menu.Models.Ingredients", "Ingredients")
                        .WithMany("Dishngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredients");

                    b.Navigation("dishes");
                });

            modelBuilder.Entity("Menu.Models.Dishes", b =>
                {
                    b.Navigation("dishngredients");
                });

            modelBuilder.Entity("Menu.Models.Ingredients", b =>
                {
                    b.Navigation("Dishngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
